{"version":3,"sources":["components/AddDialog/AddDialog.js","components/PasteIcon.js","components/TasksDialog/TasksDialog.js","components/Cell/CurrentLecture.js","components/Cell/Cell.js","components/SimpleTable.js","components/Footer/Footer.js","components/ExportDialog/ExportDialog.js","components/ImportDialog/ImportDialog.js","App.js","serviceWorker.js","index.js"],"names":["AddDialog","props","handleAdd","state","urlError","setState","errorMessage","obj","subjectName","facultyName","meetLink","lectureType","key","row","column","dialogOnClose","dialogCloseHandler","onInfoEntered","JSON","stringify","handleSubjectChange","event","target","value","handleFacultyChange","handleMeetLink","URL","err","handelLectureType","isDialogOpen","data","bind","Dialog","open","onClose","this","DialogTitle","id","DialogContent","TextField","autoFocus","margin","label","type","fullWidth","variant","onChange","FormControl","InputLabel","Select","labelId","MenuItem","selected","error","helperText","DialogActions","Button","onClick","color","Component","PasteIcon","SvgIcon","d","fill","TasksDialog","listItemOnClick","showId","tasksList","length","tempList","index","findIndex","task","undefined","showDate","taskTitle","handleClose","createNewTask","keyPress","deleteTask","cellData","localStorage","getItem","console","log","parse","hasOwnProperty","tasks","finalData","setItem","closeHandler","e","keyCode","shiftKey","preventDefault","removeId","striked","setInterval","filter","trim","name","newTask","title","date","Date","getTime","tempTaskList","unshift","classes","maxWidth","scroll","className","root","show","aria-labelledby","dividers","Box","display","InputBase","placeholder","inputProps","multiline","rows","rowsMax","inputRef","el","size","onKeyDown","endAdornment","Tooltip","IconButton","list","List","map","ListItem","role","button","ListItemIcon","Checkbox","edge","tabIndex","disableRipple","ListItemText","primary","secondary","toDateString","withStyles","theme","minWidth","maxHeight","CurrentLecture","handleCopyClick","handleMenuClose","handlePaperClick","url","window","focus","alert","handleMenuClick","anchorEl","currentTarget","handleEditClick","edit","handleDeleteClick","delete","showToDoDialog","closeToDoDialog","betaEnabled","isBetaEnabled","Card","CardContent","alignItems","flexGrow","expandHandler","style","cursor","Typography","component","currentLecture","ongoing","subHeading","gutterBottom","CardActions","startIcon","disableElevation","marginLeft","aria-label","aria-controls","aria-haspopup","Menu","keepMounted","Boolean","borderRadius","textAlign","fontSize","backgroundColor","padding","Cell","showDialog","isDialogShowing","hideDialog","handlePasteClick","hasCopiedCell","saveToStorage","isExpanded","handleMouseExit","handleMouseEnter","isHovering","expandCard","getDataFromStorage","dialogContainer","onMouseEnter","onMouseLeave","marginRight","paperClasses","clsx","Paper","childDiv","height","width","StyledTableCell","head","body","TableCell","useStyles","table","highlightRow","currentTime","times","sample","Object","keys","forEach","todayRow","getDay","todayCol","currentHour","getHours","getTodayColumn","TableContainer","Table","TableHead","TableRow","time","align","TableBody","temp","scope","info","scrape","Footer","textStyle","bottom","marginTop","ExportDialog","copyText","closeDialogHandler","navigator","clipboard","writeText","then","r","ImportDialog","showError","importData","location","reload","App","enableBeta","detail","removeItem","clicks","timer","timeout","showExportDialog","exportData","showImportDialog","export","closeDialog","import","closeImportDialog","AppBar","position","Toolbar","betaIconStyle","tableStyles","elevation","menuButton","spacing","paddingLeft","paddingTop","paddingRight","marginBottom","hostname","match","ReactDOM","render","document","getElementById","serviceWorker","ready","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.6543d985.chunk.js","sourcesContent":["import React, { Component } from 'react'\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\n\nclass AddDialog extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            subjectName: this.props.data === null ? \"\" : this.props.data.subjectName,\n            facultyName: this.props.data === null ? \"\" : this.props.data.facultyName,\n            meetLink: this.props.data === null ? \"\" : this.props.data.meetLink,\n            lectureType: this.props.data === null ? 0 : 1,\n            isDialogOpen: true,\n            urlError: false,\n            errorMessage: \"\"\n        }\n        this.handleFacultyChange = this.handleFacultyChange.bind(this);\n        this.handleSubjectChange = this.handleSubjectChange.bind(this);\n        this.handleMeetLink = this.handleMeetLink.bind(this);\n        this.dialogOnClose = this.dialogOnClose.bind(this);\n        this.handleAdd = this.handleAdd.bind(this);\n    }\n    \n    handleAdd = () => {\n        //console.log(this.state.subjectName);\n        if(this.state.urlError) {\n            this.setState({\n                errorMessage: \"Invalid URL\"\n            });\n            return;\n        }\n\n        const obj = {\n            subjectName: this.state.subjectName,\n            facultyName: this.state.facultyName,\n            meetLink: this.state.meetLink,\n            lectureType: this.state.lectureType,\n        };\n        const key = this.props.row + \"x\" + this.props.column;\n        this.dialogOnClose();\n        this.props.dialogCloseHandler();\n        this.props.onInfoEntered(key, JSON.stringify(obj));\n\n    }\n\n    handleSubjectChange = (event) => {\n        this.setState({\n            subjectName: event.target.value\n        });\n    }\n\n    handleFacultyChange = (event) => {\n        this.setState({\n            facultyName: event.target.value\n        })\n    }\n\n    handleMeetLink = (event) => {\n        try {\n            new URL(event.target.value)\n            this.setState({\n                urlError: false,\n                meetLink: event.target.value,\n                errorMessage: \"\"\n\n            })\n        } catch (err) {\n            this.setState({\n                urlError: true,\n                meetLink: event.target.value,\n                errorMessage: \"Invalid URL\"\n            })\n        }\n        \n    }\n\n    handelLectureType = (event) => {\n        this.setState({\n            lectureType: event.target.value\n        })\n    }\n\n    dialogOnClose = () => {\n        this.setState({\n            isDialogOpen: false\n        })\n    }\n\n\n    render() {\n        return (\n            <div>\n\n                <Dialog open={true} onClose={this.dialogOnClose}>\n                    <DialogTitle id=\"form-dialog-title\">Add a lecture</DialogTitle>\n                    <DialogContent>\n                        <TextField\n                            autoFocus\n                            margin=\"dense\"\n                            id=\"subjectName\"\n                            label=\"Subject Name\"\n                            type=\"text\"\n                            fullWidth\n                            variant=\"outlined\"\n                            value = {this.state.subjectName}\n                            onChange={this.handleSubjectChange}\n                        />\n                        <TextField\n                            margin=\"dense\"\n                            id=\"facultyName\"\n                            label=\"Faculty Name\"\n                            type=\"text\"\n                            fullWidth\n                            variant=\"outlined\"\n                            onChange={this.handleFacultyChange}\n                            value = {this.state.facultyName}\n                        />\n                        <FormControl variant=\"outlined\" fullWidth margin=\"dense\">\n                            <InputLabel id=\"demo-simple-select-outlined-label\">Lecture Type</InputLabel>\n                            <Select\n                                labelId=\"demo-simple-select-outlined-label\"\n                                id=\"demo-simple-select-outlined\"\n                                value={this.state.lectureType}\n                                onChange={this.handelLectureType}\n                                label=\"Lecture Type\"\n                            >\n                                <MenuItem value={0} >Theory</MenuItem>\n                                <MenuItem value={1} selected={true}>Lab</MenuItem>\n                            </Select>\n                        </FormControl>\n                        <TextField\n                            margin=\"dense\"\n                            id=\"link\"\n                            label=\"Meeting Link\"\n                            type=\"url\"\n                            fullWidth\n                            variant=\"outlined\"\n                            onChange={this.handleMeetLink}\n                            value = {this.state.meetLink}\n                            error = {this.state.urlError}\n                            helperText = {this.state.errorMessage}\n                        />\n                        <DialogActions>\n                            <Button onClick={this.props.dialogCloseHandler} color=\"primary\">Close</Button>\n                            <Button onClick={this.handleAdd} color=\"primary\" variant=\"contained\">Add</Button>\n                        </DialogActions>\n                    </DialogContent>\n\n                </Dialog>\n            </div>\n        )\n    }\n}\n\nexport default AddDialog;","import React from 'react'\nimport {SvgIcon} from \"@material-ui/core\";\n\nexport default function PasteIcon(props) {\n    return (\n        <SvgIcon {...props}>\n            <path d=\"M0 0h24v24H0z\" fill=\"none\"/><path d=\"M19 2h-4.18C14.4.84 13.3 0 12 0c-1.3 0-2.4.84-2.82 2H5c-1.1 0-2 .9-2 2v16c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V4c0-1.1-.9-2-2-2zm-7 0c.55 0 1 .45 1 1s-.45 1-1 1-1-.45-1-1 .45-1 1-1zm7 18H5V4h2v3h10V4h2v16z\"/>\n        </SvgIcon>\n    )\n}","import React, {Component} from 'react';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport {withStyles} from \"@material-ui/core/styles\";\nimport {Box} from \"@material-ui/core\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport DoneIcon from \"@material-ui/icons/Done\";\nimport Tooltip from '@material-ui/core/Tooltip';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport './TaskDialog.css';\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport Typography from \"@material-ui/core/Typography\";\nimport InputBase from \"@material-ui/core/InputBase\";\n\nconst styles = theme => ({\n    root: {\n        minWidth: 256,\n    },\n    list: {\n        maxWidth: 256,\n        maxHeight: 256,\n    }\n});\nclass TasksDialog extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            tasksList: [],\n            taskTitle: \"\",\n            showDate: false,\n\n        }\n        this.handleClose = this.handleClose.bind(this);\n        this.createNewTask = this.createNewTask.bind(this);\n        this.keyPress = this.keyPress.bind(this);\n        this.deleteTask = this.deleteTask.bind(this);\n        this.listItemOnClick = this.listItemOnClick.bind(this);\n    }\n\n    componentDidMount() {\n        const key = this.props.row + 'x' + this.props.column;\n        let cellData = localStorage.getItem(key);\n        console.log(typeof cellData);\n        if(cellData === null || cellData === \"null\") return;\n        cellData = JSON.parse(cellData);\n        if(!cellData.hasOwnProperty('tasks')) return;\n        this.setState({\n            tasksList: cellData.tasks\n        })\n    }\n\n    handleClose() {\n        const key = this.props.row + 'x' + this.props.column;\n        let cellData = localStorage.getItem(key);\n        if(cellData !== null){\n            cellData = JSON.parse(cellData);\n            cellData.tasks = this.state.tasksList\n            const finalData = JSON.stringify(cellData);\n            console.log(finalData);\n            localStorage.setItem(key, finalData);\n        }\n\n        this.props.closeHandler();\n    }\n\n    keyPress(e){\n\n        if(e.keyCode === 13){\n            if(!e.shiftKey) {\n               e.preventDefault();\n               this.createNewTask();\n            }\n        }\n    }\n\n\n    deleteTask (removeId) {\n        if(this.state.tasksList.length === 0) return;\n        let tempList = this.state.tasksList;\n        let index = tempList.findIndex((task) => task.id === removeId);\n        tempList[index].striked = true;\n\n        this.setState({\n            tasksList: tempList\n        })\n\n        setInterval(\n            ()=> {\n                this.setState({\n                    tasksList: this.state.tasksList.filter((task) => task.id !== removeId)\n                })\n            },500\n        );\n    }\n\n    createNewTask() {\n        if(this.state.taskTitle === null || this.state.taskTitle.trim() === \"\") return;\n        this.name.value = \"\";\n        const newTask = {\n            title: this.state.taskTitle.trim(),\n            date: new Date(),\n            id: new Date().getTime(),\n            striked: false,\n            showDate: false,\n        }\n        const tempTaskList = this.state.tasksList;\n        tempTaskList.unshift(newTask); // new task at top\n        //console.log(tempTaskList);\n        this.setState({\n            tasksList: tempTaskList,\n            taskTitle: \"\"\n        })\n    }\n\n    listItemOnClick =(showId) => {\n        if(this.state.tasksList.length === 0) return;\n        let tempList = this.state.tasksList;\n        let index = tempList.findIndex((task) => task.id === showId);\n        if(tempList[index].showDate === undefined) return;\n        tempList[index].showDate = !tempList[index].showDate;\n        this.setState({\n            tasksList: tempList,\n        })\n    }\n\n\n    render() {\n        const { classes } = this.props;\n\n        return(\n            <div>\n                <Dialog maxWidth=\"xs\"  scroll=\"paper\" className={classes.root} open={this.props.show} onClose={this.handleClose} aria-labelledby=\"form-dialog-title\">\n                    <DialogTitle id=\"form-dialog-title\">Tasks</DialogTitle>\n                    <DialogContent dividers={true}>\n                        <Box display=\"flex\">\n                            <InputBase\n                                autoFocus\n                                fullWidth={true}\n                                placeholder=\"Add new task\"\n                                inputProps={{ 'aria-label': 'naked' }}\n                                multiline={true}\n                                rows={1}\n                                rowsMax={4}\n                                inputRef={el => this.name = el}\n\n                                size=\"medium\"\n                                onKeyDown={this.keyPress}\n                                onChange={(event) => {\n                                    this.setState({\n                                        taskTitle: event.target.value\n                                    })\n                                }}\n                                endAdornment={\n                                    <Tooltip title=\"Add to list\">\n                                        <IconButton size=\"small\" onClick={this.createNewTask} >\n                                            <DoneIcon />\n                                        </IconButton>\n                                    </Tooltip>\n                                }\n                                />\n                        </Box>\n                        <div id=\"task-list\" className={classes.list} >\n                            <List className={classes.list} >\n                                {this.state.tasksList.map((task) => {\n                                    const labelId = `checkbox-list-label-${task.id}`;\n\n                                    return (\n                                        <ListItem key={task.id} role={undefined} button={true} onClick={()=>this.listItemOnClick(task.id)}>\n                                            <Tooltip title=\"Mark as done\">\n                                            <ListItemIcon>\n                                                <Checkbox\n                                                    edge=\"start\"\n                                                    //checked={false}\n                                                    onClick={()=>this.deleteTask(task.id)}\n                                                    tabIndex={-1}\n                                                    disableRipple\n                                                    inputProps={{ 'aria-labelledby': labelId }}\n                                                />\n                                            </ListItemIcon>\n                                            </Tooltip>\n                                            <ListItemText className={task.striked ? \"dont-break-out crossed-line\" : \"dont-break-out\"}\n                                                          id={labelId}\n                                                          primary={task.title}\n                                                          secondary={task.showDate ? task.date.toDateString() : null}/>\n                                        </ListItem>\n                                    );\n                                })}\n                            </List>\n                        </div>\n\n                    </DialogContent>\n{/*                    <DialogContentText>\n                        <Typography variant=\"caption\" display=\"block\" gutterBottom>\n                            Note: Each slot carries its own tasks list.\n                        </Typography>\n                    </DialogContentText>*/}\n                    <DialogActions>\n                        <Button onClick={this.handleClose} color=\"primary\">\n                            Done\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </div>\n        )\n    }\n}\n\nexport default withStyles(styles) (TasksDialog);","import React, { Component } from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport OpenInNewIcon from '@material-ui/icons/OpenInNew';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport Box from '@material-ui/core/Box';\nimport ExpandLessIcon from '@material-ui/icons/ExpandLess';\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\nimport AssignmentIcon from '@material-ui/icons/Assignment';\n\nimport IconButton from '@material-ui/core/IconButton';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport TasksDialog from \"../TasksDialog/TasksDialog\";\nimport {FlightTakeoff} from \"@material-ui/icons\";\nconst styles = theme => ({\n    root: {\n        minWidth: 148,\n        borderRadius: '8px',\n        textAlign: 'left',\n    },\n\n    subHeading: {\n        fontSize: 14\n    },\n\n    button: {\n        borderRadius: 6,\n    },\n\n    ongoing: {\n        borderRadius: 4,\n        backgroundColor: '#00c85380',\n        padding: '2px 4px',\n        fontSize: 12\n    },\n    fullWidth: {\n        minWidth: 148\n    }\n\n});\n\nclass CurrentLecture extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            anchorEl: false,\n            showToDoDialog: false,\n            betaEnabled: false\n        }\n        this.handlePaperClick = this.handlePaperClick.bind(this);\n        this.handleMenuClick = this.handleMenuClick.bind(this);\n        this.handleMenuClose = this.handleMenuClose.bind(this);\n        this.handleEditClick = this.handleEditClick.bind(this);\n        this.handleDeleteClick = this.handleDeleteClick.bind(this);\n        this.handleCopyClick = this.handleCopyClick.bind(this);\n        this.showToDoDialog = this.showToDoDialog.bind(this);\n        this.closeToDoDialog = this.closeToDoDialog.bind(this);\n    }\n\n    componentDidMount() {\n        const isBetaEnabled = localStorage.getItem(\"enableBeta\");\n        if(isBetaEnabled === null || isBetaEnabled === undefined) return;\n        if(isBetaEnabled !== '1') return;\n\n        this.setState({\n            betaEnabled: isBetaEnabled\n        })\n\n    }\n\n    handleCopyClick = () => {\n        localStorage.setItem(\"copiedLecture\", JSON.stringify(this.props.data));\n        this.handleMenuClose();\n    }\n\n    handlePaperClick = () => {\n        let url = this.props.data.meetLink;\n\n        if (url === undefined || url === \"\" || url === null) return;\n        console.log(url)\n        try {\n            let win = window.open(new URL(url), '_blank');\n            win.focus();\n        } catch (err) {\n            alert('invalid url');\n        }\n\n\n    }\n\n    handleMenuClick = (event) => {\n        this.setState({\n            anchorEl: event.currentTarget\n        })\n    };\n\n    handleMenuClose = () => {\n        this.setState({\n            anchorEl: null\n        })\n    };\n\n    handleEditClick = () => {\n        this.props.edit();\n        this.handleMenuClose();\n    }\n\n    handleDeleteClick =() => {\n        this.props.delete();\n        this.handleMenuClose();\n    }\n\n    showToDoDialog = () => {\n        this.setState({\n            showToDoDialog: true,\n        })\n    }\n\n    closeToDoDialog = () => {\n        this.setState({\n            showToDoDialog: false,\n        })\n    }\n\n    render() {\n        const { classes } = this.props;\n\n        return (\n            <Card className={classes.root}>\n                <CardContent>\n                    <Box display=\"flex\" alignItems=\"center\">\n                        <Box flexGrow={1} onClick={this.props.expandHandler} style={{cursor: 'pointer'}}>\n                            <Typography variant=\"h5\" component=\"h2\">\n                                {this.props.data.subjectName}\n                            </Typography>\n                        </Box>\n                        {\n                        (this.props.currentLecture) ?\n                        <Box className={classes.ongoing}>\n                            Ongoing\n                        </Box>\n                        :\n                        <IconButton onClick={this.props.expandHandler} size=\"small\">\n                            <ExpandLessIcon />\n                        </IconButton>\n                        }\n                    </Box>\n\n                    <Typography className={classes.subHeading} color=\"textSecondary\" gutterBottom>\n                        {\n                            (this.props.data.lectureType === 0) ?\n                                \"Theory\" : \"Lab\"\n                        }\n                    </Typography>\n                </CardContent>\n                <CardActions>\n                    <Box display=\"flex\" className={classes.fullWidth}>\n                        <Box flexGrow={1}>\n                            <Button\n                                variant=\"contained\"\n                                color=\"primary\"\n                                className={classes.button}\n                                startIcon={<OpenInNewIcon />}\n                                size=\"small\"\n                                disableElevation\n                                onClick={this.handlePaperClick}\n                            >\n                                Open\n                            </Button>\n                            {\n                                (this.state.betaEnabled) ?\n                                <IconButton\n                                    size=\"small\"\n                                    style={{marginLeft: 4}}\n                                    variant=\"contained\"\n                                    aria-label={\"Add task\"}\n                                    onClick={this.showToDoDialog}\n                                >\n                                    <AssignmentIcon color=\"primary\"/>\n                                </IconButton>\n                                    : null\n                            }\n\n                        </Box>\n                        <Box>\n                            <div>\n                                <IconButton aria-controls=\"context-action-menu\" aria-haspopup=\"true\" onClick={this.handleMenuClick} size=\"small\">\n                                    <MoreVertIcon />\n                                </IconButton>\n                                <Menu\n                                    id=\"simple-menu\"\n                                    anchorEl={this.state.anchorEl}\n                                    keepMounted\n                                    open={Boolean(this.state.anchorEl)}\n                                    onClose={this.handleMenuClose}\n                                >\n                                    <MenuItem onClick={this.handleCopyClick}>Copy</MenuItem>\n                                    <MenuItem onClick={this.handleEditClick}>Edit</MenuItem>\n                                    <MenuItem onClick={this.handleDeleteClick}>Delete</MenuItem>\n                                </Menu>\n                            </div>\n                        </Box>\n                    </Box>\n                </CardActions>\n\n                <TasksDialog show={this.state.showToDoDialog} closeHandler={this.closeToDoDialog} row={this.props.row} column={this.props.column}/>\n            </Card>\n        )\n\n    }\n}\n\nexport default withStyles(styles)(CurrentLecture);","import React, { Component } from 'react';\nimport AddDialog from '../AddDialog/AddDialog'\nimport clsx from 'clsx';\nimport './Cell.css'\nimport IconButton from '@material-ui/core/IconButton';\nimport CreateIcon from '@material-ui/icons/Create';\nimport PasteIcon from '../PasteIcon';\n\nimport Paper from '@material-ui/core/Paper';\nimport { withStyles } from '@material-ui/core/styles';\nimport CurrentLecture from './CurrentLecture'\nimport {Box} from \"@material-ui/core\";\n\nconst styles = theme => ({\n    root: {\n        height: '48px',\n        width: '100%',\n        borderRadius: '8px',\n        display: 'flex',\n        alignItems: 'center',\n        cursor: 'pointer',\n    },\n    childDiv: {\n        margin: 'auto',\n    },\n\n    currentLecture: {\n        color: 'red',\n        height: '148px',\n        width: '148px'\n    }\n});\n\n\nclass Cell extends Component {\n    constructor(props) {\n        super(props);\n        this.handleMouseExit = this.handleMouseExit.bind(this);\n        this.handleMouseEnter = this.handleMouseEnter.bind(this);\n        this.state = {\n            isHovering: false,\n            isDialogShowing: false,\n            isExpanded: this.props.expandCard,\n            data: {\n                subjectName: null,\n                facultyName: null,\n                meetLink: null,\n                lectureType: 0,\n            },\n            hasCopiedCell: false,\n            \n        };\n        this.showDialog = this.showDialog.bind(this);\n        this.hideDialog = this.hideDialog.bind(this);\n        this.saveToStorage = this.saveToStorage.bind(this);\n        this.getDataFromStorage = this.getDataFromStorage.bind(this);\n        this.handlePaperClick = this.handlePaperClick.bind(this);\n        this.edit = this.edit.bind(this);\n        this.delete = this.delete.bind(this);\n        this.handlePasteClick = this.handlePasteClick.bind(this);\n        this.hasCopiedCell = this.hasCopiedCell.bind(this);\n    }\n\n    edit() {\n        this.showDialog();\n        console.log(\"clicked\");\n    }\n\n    delete() {\n        let key = this.props.row + \"x\" + this.props.column;\n        localStorage.setItem(key, null);\n        this.setState({\n            data: null\n        })\n    }\n\n    componentDidMount() {\n        this.getDataFromStorage(this.props.row + \"x\" + this.props.column);\n        if(this.props.currentLecture){\n            //console.log(this.props.row + \"x\" + this.props.column);\n        }\n    }\n\n    handleMouseExit() {\n\n        this.setState({\n            isHovering: false\n        })\n        \n    }\n\n    saveToStorage(key, value) {\n        //this.props.onInfoEntered(key, value);\n        localStorage.setItem(key, value);\n        this.setState({\n            data: JSON.parse(value)\n        })\n    }\n\n    getDataFromStorage(key) {\n        let data = localStorage.getItem(key);\n        \n        if (data === null || data === undefined) return;\n        this.setState({\n            data: JSON.parse(data)\n        })\n    }\n\n    handleMouseEnter() {\n\n        this.setState({\n            isHovering: true,\n        })\n        if(this.hasCopiedCell()){\n            this.setState({\n                hasCopiedCell: true\n            })\n        }\n    }\n\n    showDialog = () => {\n        this.setState({\n            isDialogShowing: true\n        })\n    }\n\n    hideDialog = () => {\n        this.setState({\n            isDialogShowing: false\n        })\n    }\n\n    handlePasteClick = () => {\n        if(!this.hasCopiedCell()){\n            return;\n        }\n        let data = localStorage.getItem(\"copiedLecture\");\n        try{\n            this.saveToStorage(this.props.row + \"x\" + this.props.column, data);\n        } catch (err) {\n            alert(err);\n        }\n\n    }\n\n    hasCopiedCell= () => {\n        let data = localStorage.getItem(\"copiedLecture\");\n\n        return !(data === null || data === undefined);\n\n    }\n\n\n    handlePaperClick = () => {\n        // let url = this.state.data.meetLink;\n        // console.log(url)\n        // if(url === undefined) return;\n        // let win = window.open(new URL(url), '_blank');\n        // win.focus();\n        this.setState({\n            isExpanded: !this.state.isExpanded\n        })\n        //console.log(this.state.isExpanded)\n    }\n\n\n    render() {\n        const { classes } = this.props;\n        const dialogContainer = (\n            <div id=\"dialog-container\">\n                <AddDialog dialogCloseHandler={this.hideDialog} row={this.props.row} column={this.props.column} onInfoEntered={this.saveToStorage} data={this.state.data}/>\n            </div>\n        );\n        if (this.state.data === null) {\n            return (\n                <div >\n                    <div id=\"edit-icon\" className=\"container-div\"\n                        onMouseEnter={this.handleMouseEnter}\n                        onMouseLeave={this.handleMouseExit}\n\n                    >\n                        {\n                            (this.state.isHovering) ?\n                                <div>\n                                    <Box alignItems=\"center\">\n                                    <IconButton style={{ marginRight: 8 }} aria-label=\"edit\" onClick={this.showDialog}>\n                                        <CreateIcon />\n                                    </IconButton>\n                                    {\n                                        (this.state.hasCopiedCell) ?\n                                            <IconButton aria-label=\"paste\" onClick={this.handlePasteClick}>\n                                                <PasteIcon  />\n                                            </IconButton>\n                                            :\n                                            \"\"\n                                    }\n\n                                    </Box>\n                                </div>\n                                : \"\"\n                        }\n                    </div>\n                    {this.state.isDialogShowing ? dialogContainer : \"\"}\n                </div>\n            );\n        } else {\n            let paperClasses = clsx({\n                [classes.root] : true, //always apply\n                [classes.currentLecture] : this.state.isExpanded //only when open === true\n            })\n            return (\n                <div style={{padding: 8}}>\n                {(!this.state.isExpanded ) ? \n                <Paper className={paperClasses} onClick={this.handlePaperClick}>\n                    <div id=\"details\" className={classes.childDiv}>\n                        {this.state.data.subjectName}\n                    </div>\n                </Paper>\n                :\n                <CurrentLecture data={this.state.data} edit={this.edit} delete={this.delete} expandHandler={this.handlePaperClick} currentLecture={this.props.currentLecture} row={this.props.row} column={this.props.column}/>\n                }\n                {this.state.isDialogShowing ? dialogContainer : \"\"}\n                </div>\n            )\n        }\n    }\n}\n\nexport default withStyles(styles)(Cell);","import React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport Cell from './Cell/Cell';\n\nconst StyledTableCell = withStyles((theme) => ({\n  head: {\n    // backgroundColor: theme.palette.common.black,\n    // color: theme.palette.common.white,\n    fontSize: 16,\n    height: 36,\n  },\n  body: {\n    fontSize: 14,\n  },\n}))(TableCell);\n\n// const StyledTableRow = withStyles((theme) => ({\n//   root: {\n//     backgroundColor: theme.palette.action.hover,\n//   },\n// }))(TableRow);\n\nconst useStyles = theme => ({\n  table: {\n    minWidth: 50,\n  },\n  highlightRow: {\n    backgroundColor: '#f5f5f5',\n  }\n});\nconst currentTime = { \"8\": 1, \"9\": 2, \"10\": 3, \"11\": 4, \"12\": 5, \"13\": 6, \"14\": 7, \"15\": 8, \"16\": 9, \"17\": 10, \"18\": 11 }\nconst sampleTimeTable = '{\"0x0\":null,\"0x1\":null,\"0x2\":{\"subjectName\":\"AI\",\"facultyName\":\"PSD\",\"meetLink\":\"https://meet.google.com/vsi-duid-upf\",\"lectureType\":0},\"0x3\":{\"subjectName\":\"IOT\",\"facultyName\":\"DRD\",\"meetLink\":\"https://meet.google.com/zpy-qpau-git\",\"lectureType\":0},\"0x4\":null,\"0x5\":null,\"0x6\":{\"subjectName\":\"MAD\",\"facultyName\":\"KVJ\",\"meetLink\":\"https://meet.google.com/gib-cuik-uma\",\"lectureType\":1},\"0x7\":{\"subjectName\":\"MAD\",\"facultyName\":\"KVJ\",\"meetLink\":\"https://meet.google.com/gib-cuik-uma\",\"lectureType\":1},\"0x8\":null,\"0x9\":null,\"0x10\":null,\"1x0\":{\"subjectName\":\"IOT\",\"facultyName\":\"DRD\",\"meetLink\":\"https://meet.google.com/zpy-qpau-git\",\"lectureType\":1},\"1x1\":{\"subjectName\":\"IOT\",\"facultyName\":\"DRD\",\"meetLink\":\"https://meet.google.com/zpy-qpau-git\",\"lectureType\":1},\"1x2\":{\"subjectName\":\"AI\",\"facultyName\":\"PSD\",\"meetLink\":\"https://meet.google.com/vsi-duid-upf\",\"lectureType\":0},\"1x3\":{\"subjectName\":\"IOT\",\"facultyName\":\"DRD\",\"meetLink\":\"https://meet.google.com/zpy-qpau-git\",\"lectureType\":0},\"1x4\":null,\"1x5\":null,\"1x6\":{\"subjectName\":\"NIS\",\"facultyName\":\"RSJ\",\"meetLink\":\"https://meet.google.com/yko-bysx-ksm?pli=1&authuser=1\",\"lectureType\":1},\"1x7\":{\"subjectName\":\"NIS\",\"facultyName\":\"RSJ\",\"meetLink\":\"https://meet.google.com/yko-bysx-ksm?pli=1&authuser=1\",\"lectureType\":1},\"1x8\":null,\"1x9\":null,\"1x10\":null,\"2x0\":null,\"2x1\":null,\"2x2\":{\"subjectName\":\"AI\",\"facultyName\":\"PSD\",\"meetLink\":\"https://meet.google.com/vsi-duid-upf\",\"lectureType\":0},\"2x3\":{\"subjectName\":\"IOT\",\"facultyName\":\"DRD\",\"meetLink\":\"https://meet.google.com/zpy-qpau-git\",\"lectureType\":0},\"2x4\":null,\"2x5\":null,\"2x6\":null,\"2x7\":null,\"2x8\":null,\"2x9\":null,\"2x10\":null,\"3x0\":null,\"3x1\":null,\"3x2\":{\"subjectName\":\"DS\",\"facultyName\":\"NSC\",\"meetLink\":\"https://meet.google.com/bkp-gtwe-dhh\",\"lectureType\":0},\"3x3\":{\"subjectName\":\"DS\",\"facultyName\":\"NSC\",\"meetLink\":\"https://meet.google.com/bkp-gtwe-dhh\",\"lectureType\":0},\"3x4\":null,\"3x5\":null,\"3x6\":{\"subjectName\":\"DS\",\"facultyName\":\"NSC\",\"meetLink\":\"https://meet.google.com/bkp-gtwe-dhh\",\"lectureType\":1},\"3x7\":{\"subjectName\":\"DS\",\"facultyName\":\"NSC\",\"meetLink\":\"https://meet.google.com/bkp-gtwe-dhh\",\"lectureType\":1},\"3x8\":null,\"3x9\":null,\"3x10\":null,\"4x0\":null,\"4x1\":null,\"4x2\":{\"subjectName\":\"NIS\",\"facultyName\":\"RSJ\",\"meetLink\":\"https://meet.google.com/yko-bysx-ksm?pli=1&authuser=1\",\"lectureType\":0},\"4x3\":{\"subjectName\":\"NIS\",\"facultyName\":\"RSJ\",\"meetLink\":\"https://meet.google.com/yko-bysx-ksm?pli=1&authuser=1\",\"lectureType\":0},\"4x4\":{\"subjectName\":\"DS\",\"facultyName\":\"NSC\",\"meetLink\":\"https://meet.google.com/bkp-gtwe-dhh\",\"lectureType\":0},\"4x5\":null,\"4x6\":null,\"4x7\":null,\"4x8\":null,\"4x9\":null,\"4x10\":null,\"5x0\":{\"subjectName\":\"AI\",\"facultyName\":\"PSD\",\"meetLink\":\"https://meet.google.com/vsi-duid-upf\",\"lectureType\":1},\"5x1\":{\"subjectName\":\"AI\",\"facultyName\":\"PSD\",\"meetLink\":\"https://meet.google.com/vsi-duid-upf\",\"lectureType\":1},\"5x2\":null,\"5x3\":null,\"5x4\":{\"subjectName\":\"MAD\",\"facultyName\":\"KVJ\",\"meetLink\":\"https://meet.google.com/gib-cuik-uma\",\"lectureType\":0},\"5x5\":{\"subjectName\":\"NIS\",\"facultyName\":\"RSJ\",\"meetLink\":\"https://meet.google.com/yko-bysx-ksm?pli=1&authuser=1\",\"lectureType\":0},\"5x6\":null,\"5x7\":null,\"5x8\":null,\"5x9\":null,\"5x10\":null,\"6x0\":null,\"6x1\":null,\"6x2\":null,\"6x3\":null,\"6x4\":null,\"6x5\":null,\"6x6\":null,\"6x7\":null,\"6x8\":null,\"6x9\":null,\"6x10\":null}';\nconst rows = ['Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday', 'Sunday']\nconst times = ['08:00:09:00', '09:00:10:00', '10:00:11:00', '11:00:12:00', '12:00:13:00', '13:00:14:00', '14:00:15:00', '15:00:16:00', '16:00:17:00', '17:00:18:00', '18:00:19:00']\nlet data = {};\nconst scrape = (key) => {\n  let info = localStorage.getItem(key);\n  data[key] = JSON.parse(info);\n\n  //console.log(data)\n  //console.log(key)\n}\n\nconst getTodaysRow = () => {\n  let today = new Date();\n  let weekDay = today.getDay();\n\n  //return 0;\n  return(weekDay - 1);\n}\n\nconst getTodayColumn = () => {\n  let today = new Date();\n  let currentHour = today.getHours();\n  //console.log(currentTime[currentHour] - 1)\n  return currentTime[currentHour] - 1;\n  //return 2;\n}\nconst SimpleTable = () => {\n  const classes = useStyles();\n  let row = -1, column = 0;\n\n  let sample = JSON.parse(sampleTimeTable);\n  let keysCollection = Object.keys(sample);\n  //console.log(sample[keysCollection[2]])\n  keysCollection.forEach(\n    (key, index) => {\n      if (localStorage.getItem(key) === null || localStorage.getItem(key) === undefined) {\n        localStorage.setItem(key, JSON.stringify(sample[key]));\n      }\n    }\n  );\n\n  let todayRow = getTodaysRow();\n  let todayCol = getTodayColumn();\n\n  return (\n\n    <TableContainer component={Paper}>\n      <Table size=\"small\" aria-label=\"simple table\">\n        <TableHead >\n          <TableRow>\n            <StyledTableCell className={classes.head}>Day</StyledTableCell>\n            {\n              times.map((time) => (\n                <StyledTableCell key={time} align=\"center\">{time}</StyledTableCell>\n              ))\n            }\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {rows.map((temp) => {\n            row = row + 1;\n            column = -1;\n            return (\n\n              <TableRow key={temp}>\n                <TableCell component=\"th\" scope=\"row\">\n                  <b>{temp}</b>\n                </TableCell>\n                {\n                  times.map((time) => {\n                    column = column + 1;\n                    return (\n                      \n                      <TableCell key={temp + time} align=\"center\" padding={\"none\"}>\n                        {scrape(row + \"x\" + column)}\n                        {\n                          (todayRow === row ) ?\n                          <Cell column={column} row={row} expandCard={true} currentLecture={Boolean(todayCol === column)}/> \n                          :\n                          <Cell column={column} row={row} expandCard={false} currentLecture={false}/>\n                        }\n                        \n                      </TableCell>\n\n                    )\n                  })\n                }\n                \n                {localStorage.setItem(\"finalData\", JSON.stringify(data))}\n                \n              </TableRow>\n\n            )\n\n          }\n\n          )}\n        </TableBody>\n      </Table>\n    </TableContainer>\n  );\n}\n\nexport default withStyles(useStyles) (SimpleTable);","import React, {Component} from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport { withStyles } from '@material-ui/core/styles';\nimport FavoriteIcon from '@material-ui/icons/Favorite';\nimport { IconButton } from '@material-ui/core';\n\n\nconst styles = theme => ({\n    root: {\n      bottom: 0,\n      // backgroundColor: '#EEEEEE',\n      width: '100%',\n      textAlign: 'center',\n    },\n\n    textStyle: {\n      marginTop: '8px'\n    }\n});\n\nclass Footer extends Component{\n  render () {\n    const { classes } = this.props;\n\n    return (\n        <div className={classes.root}>\n        \n        <Typography variant=\"subtitle1\" gutterBottom  className={classes.textStyle} >\n            Made with<IconButton size=\"small\"><FavoriteIcon color=\"secondary\" /></IconButton>by Makarand \n\n        </Typography>\n        </div>\n    );\n  }\n}\n\nexport default withStyles(styles)(Footer);","import React, { Component } from 'react';\nimport TextField from '@material-ui/core/TextField';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Button from '@material-ui/core/Button';\nimport { withStyles } from '@material-ui/core/styles';\n\n\nconst styles = theme => ({\n    root: {\n        minWidth: 256,\n    }\n});\n\nclass ExportDialog extends Component {\n    constructor(props) {\n        super(props);\n        this.handleClose = this.handleClose.bind(this);\n        this.copyText = this.copyText.bind(this);\n    }\n\n    handleClose(){\n        this.props.closeDialogHandler();\n    }\n\n    copyText() {\n        navigator.clipboard.writeText(this.props.data).then(r => this.handleClose());\n    }\n\n\n    render() {\n        const { classes } = this.props;\n\n        return (\n            <div className={classes.root}>\n                <Dialog open={this.props.show} onClose={this.handleClose}>\n                    <DialogTitle>Export the current Timetable</DialogTitle>\n                    <DialogContent>\n\n                        <TextField\n                            id=\"outlined-multiline-static\"\n                            label=\"Timetable Data\"\n                            multiline\n                            rows={18}\n                            value={this.props.data}\n                            variant=\"outlined\"\n                            fullWidth\n                        />\n                        <DialogActions>\n                        <Button onClick={this.handleClose} color=\"primary\">\n                            Cancel\n                        </Button>\n                        <Button onClick={this.copyText} color=\"primary\" variant=\"contained\">\n                            Copy\n                        </Button>\n                        </DialogActions>\n                    </DialogContent>\n                </Dialog>\n            </div>\n        )\n    }\n}\n\nexport default withStyles(styles) (ExportDialog);","import React, { Component } from 'react';\nimport TextField from '@material-ui/core/TextField';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Button from '@material-ui/core/Button';\nimport { withStyles } from '@material-ui/core/styles';\n\n\nconst styles = theme => ({\n    root: {\n        minWidth: 256,\n    }\n});\n\nclass ImportDialog extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            showError: false,\n            errorMessage: \"\",\n            data: null\n        }\n        this.onChange = this.onChange.bind(this);\n        this.handleClose = this.handleClose.bind(this);\n        this.importData = this.importData.bind(this);\n        //this.showErrorMessage = this.showErrorMessage.bind(this);\n    }\n\n    handleClose(){\n        this.props.closeDialogHandler();\n    }\n\n    importData() {\n        if(this.state.data === null) return ;\n        //console.log(this.state.data);\n        let keysCollection = Object.keys(this.state.data);\n        //console.log(sample[keysCollection[2]])\n        keysCollection.forEach(\n            (key, index) => {\n                localStorage.setItem(key, JSON.stringify(this.state.data[key]));\n            }\n        );\n        this.handleClose();\n        // eslint-disable-next-line no-restricted-globals\n        location.reload();\n    }\n\n    onChange(event){\n        try {\n            let data = JSON.parse(event.target.value)\n            this.setState({\n                showError: false,\n                data: data,\n                errorMessage: \"\"\n            })\n        } catch (err) {\n            this.setState({\n                showError: true,\n                errorMessage: \"Invalid JSON\"\n            })\n        }\n\n    }\n    render() {\n        const { classes } = this.props;\n\n        return (\n            <div className={classes.root}>\n                <Dialog open={this.props.show} onClose={this.handleClose}>\n                    <DialogTitle>Import Timetable</DialogTitle>\n                    <DialogContent>\n\n                        <TextField\n                            id=\"outlined-multiline-static\"\n                            label=\"Timetable Data\"\n                            multiline\n                            rows={8}\n                            variant=\"outlined\"\n                            fullWidth\n                            onChange={this.onChange}\n                            error={this.state.showError}\n                            helperText = {this.state.errorMessage}\n\n                        />\n                        <DialogActions>\n                            <Button onClick={this.handleClose} color=\"primary\">\n                                Cancel\n                            </Button>\n                            <Button onClick={this.importData} color=\"primary\" variant=\"contained\">\n                                Import\n                            </Button>\n                        </DialogActions>\n                    </DialogContent>\n                </Dialog>\n            </div>\n        )\n    }\n}\n\nexport default withStyles(styles) (ImportDialog);","import React, { Component } from 'react';\nimport './App.css';\nimport SimpleTable from './components/SimpleTable'\nimport Footer from './components/Footer/Footer'\nimport { withStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Paper from '@material-ui/core/Paper';\nimport ExportDialog from './components/ExportDialog/ExportDialog';\nimport ImportDialog from './components/ImportDialog/ImportDialog';\nimport IconButton from \"@material-ui/core/IconButton\";\nimport MoreVertIcon from \"@material-ui/icons/MoreVert\";\nimport Menu from \"@material-ui/core/Menu\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport {Box} from \"@material-ui/core\";\n\n\nconst styles = theme => ({\n  root: {\n    flexGrow: 1,\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  title: {\n    flexGrow: 1,\n    textAlign: 'center'\n  },\n  tableStyles: {\n    paddingLeft: 18,\n    paddingTop: 18,\n    paddingRight: 18,\n  },\n\n  betaIconStyle: {\n    height:20,\n    fontSize: 12,\n    padding: '2px 4px 0px 4px',\n    minWidth: 36,\n    marginLeft: 4,\n    marginBottom: 12,\n  }\n});\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.clicks = 0;\n    this.timer = null;\n    this.timeout = 350;\n\n    this.state = ({\n      showExportDialog: false,\n      exportData: null,\n      showImportDialog: false,\n      anchorEl: false,\n      enableBeta: false,\n    })\n    this.export = this.export.bind(this);\n    this.closeDialog = this.closeDialog.bind(this);\n    this.import = this.import.bind(this);\n    this.closeImportDialog = this.closeImportDialog.bind(this);\n    this.handleMenuClick = this.handleMenuClick.bind(this);\n    this.handleMenuClose = this.handleMenuClose.bind(this);\n    this.enableBeta = this.enableBeta.bind(this);\n  }\n\n  export() {\n    let data = localStorage.getItem('finalData');\n    //alert(data);\n    this.setState({\n      exportData: data,\n      showExportDialog: true,\n    })\n  }\n\n  componentDidMount() {\n    const enableBeta = localStorage.getItem(\"enableBeta\");\n    if(enableBeta === null || enableBeta === undefined) {\n      return;\n    }\n    if(enableBeta === '1'){\n      this.setState({\n        enableBeta: true,\n      })\n    }\n  }\n\n  enableBeta = (e) => {\n    if(e.detail !== 3) return\n    if(this.state.enableBeta) {\n      this.setState({\n        enableBeta: false\n      })\n      localStorage.removeItem(\"enableBeta\");\n\n      alert(\"Experimental features are now disabled.\");\n\n    } else {\n      this.setState({\n        enableBeta: true\n      })\n      alert(\"Experimental features are enabled.\")\n      localStorage.setItem(\"enableBeta\", '1');\n    }\n    window.location.reload();\n  }\n\n  handleMenuClose = () => {\n    this.setState({\n      anchorEl: null\n    })\n  };\n\n  handleMenuClick = (event) => {\n    this.setState({\n      anchorEl: event.currentTarget\n    })\n  };\n\n  closeImportDialog() {\n    this.setState({\n      showImportDialog: false,\n    })\n  }\n  closeDialog() {\n    this.setState({\n      showExportDialog: false\n    })\n  }\n\n  import() {\n    this.setState(({\n      showImportDialog: true,\n    }))\n  }\n\n  render() {\n    const { classes } = this.props;\n\n    return (\n      <div id=\"body\">\n        <AppBar position=\"static\">\n          <Toolbar  variant=\"dense\">\n            {/* <IconButton edge=\"start\" className={classes.menuButton} color=\"inherit\" aria-label=\"menu\">\n              <MenuIcon />\n            </IconButton> */}\n            <Typography variant=\"h6\" className={classes.title}>\n              <span style={{cursor: \"pointer\"}} onClick={this.enableBeta}>Timetable</span>\n              {\n                (this.state.enableBeta) ?\n                    <Button className={classes.betaIconStyle}\n                            disableElevation={true}\n                            size={\"small\"}\n                            variant=\"contained\"\n                    >\n                      BETA\n                    </Button>\n                    :\n                    null\n              }\n\n            </Typography>\n            <div>\n              <IconButton aria-controls=\"context-action-menu\" aria-haspopup=\"true\" onClick={this.handleMenuClick} size=\"small\">\n                <MoreVertIcon style={{ color: '#fff' }}/>\n              </IconButton>\n              <Menu\n                  id=\"simple-menu\"\n                  anchorEl={this.state.anchorEl}\n                  keepMounted\n                  open={Boolean(this.state.anchorEl)}\n                  onClose={this.handleMenuClose}\n              >\n                <MenuItem onClick={this.export}>Export</MenuItem>\n                <MenuItem onClick={this.import}>Import</MenuItem>\n              </Menu>\n            </div>\n\n          </Toolbar>\n        </AppBar>\n        <div className={classes.tableStyles}>\n          <Paper elevation={3}>\n            <SimpleTable />\n          </Paper>\n        </div>\n        \n        <ExportDialog data={this.state.exportData} show={this.state.showExportDialog} closeDialogHandler={this.closeDialog}/>\n        <ImportDialog show={this.state.showImportDialog} closeDialogHandler={this.closeImportDialog}/>\n        <Footer/>\n      </div>\n    );\n  }\n}\n\nexport default withStyles(styles)(App);","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}